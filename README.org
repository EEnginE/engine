#+STARTUP: indent
#+STARTUP: showall
#+OPTIONS: ^:nil

#+begin_src
           _____   _____            _
          |  ___| |  ___|          (_)
          | |__   | |__ _ __   __ _ _ _ __   ___
          |  __|  |  __| '_ \ / _` | | '_ \ / _ \
          | |___  | |__| | | | (_| | | | | |  __/
          \____/  \____/_| |_|\__, |_|_| |_|\___|
                               __/ |
                              |___/
#+end_src

* Denpendencies

 - CMake v2.8.9 or newer [http://www.cmake.org/]
 - The OpenGL headers (often in a mesa package)
 - Linux/UNIX (at least one of those):
   - X11 and it's headers (including RandR)
   - Wayland and it's headers (not yet supported)
   - Mir and it's headers (not yet supported)
 - Boost v1.48.0 or newer [http://www.boost.org/]
 - GLEW v1.6.0 or newer [http://glew.sourceforge.net/]
 - gawk - needed for some scripts, mawk wont work!


* Installation

  Download from git server at this moment only with invitation.

#+begin_src sh
$ git clone git@mprs-bartel.de:/git/engine.git
$ ./generate.sh
$ mkdir build
$ cd build
$ cmake <Additional CMake options> ..
$ make
$ make install
#+end_src

  Alternatively, you can use ninja instead of make by adding -G Ninja to your cmake options.


* CMake options


** ENGINE

   -DCMAKE_INSTALL_PREFIX=/Install/prefix/of/engine

   -DENGINE_VERBOSE=<0/1>

     Special cmake output and verbose compiler messages ...
       - 0: disabled - default
       - 1: enabled

   -DDISPLAY_SERVER=<which>

     Possible options:
      - UNIX_X11     - default
      - WINDOWS      - alpha
      - UNIX_WAYLAND - not yet supported
      - UNIX_MIR     - not yet supported

   -DENGINE_LINK_SHARED=<0/1>

     Link the engine ...
       - 0: static
       - 1: shared - default

   -DENGINE_BUILD_SHARED=<0/1>

     Build the engine ...
       - 0: static
       - 1: shared - default

   -DEXTRA_CXX_FLAGS=<Extra CXX compiler options>

   
   -DSANITIZERS=<sanitizers>
   -DSANITIZER_OPTIONS=<options>

     Select sanitizers to use. Only works with clang


** GLEW

   -DGLEW_USE_DEFAULT=<0/1>

     if you want to have your system GLEW
       - 0: disabled - default
       - 1: enabled
     
   -DGLEW_ROOT=/Path/to/GLEW/install/prefix


** BOOST

   -DBoost_NO_SYSTEM_PATHS=<0/1>

      To tell CMake to only search boost in BOOST_ROOT
       - 0: disabled - default
       - 1: enabled

   -DBOOST_ROOT=/Path/to/Boost/install/prefix


* Troubleshooting:


** CMake can not find Boost

   Try to set:

     -DBOOST_ROOT=/Path/to/Boost/install/prefix


** CMake complains about an outdated Boost version even though the newest Version has been compiled by myself

   You can either remove your native boost installation or set

     -DBoost_NO_SYSTEM_PATHS=1

   and

     -DBOOST_ROOT=/Path/to/Boost/install/prefix


** CMake can not find GLEW

   Try to set:

   -DGLEW_ROOT=/Path/to/GLEW/install/prefix


** I crosscompiled the project on Linux and want to test the result with WINE but WINE crashes immediately.

    Wine doesnt like boost::wregex because a function was unimplemented: [[http://bugs.winehq.org/show_bug.cgi?id=36617][BUG]]
 
    Try to update your WINE version.
    Or set:

      -DEXTRA_CXX_FLAGS=-DUGLY_WINE_WORKAROUND
