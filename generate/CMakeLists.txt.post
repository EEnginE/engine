
# Generate Doxyfile
configure_file(
 "${PROJECT_SOURCE_DIR}/Doxyfile.in"
 "${PROJECT_SOURCE_DIR}/Doxyfile"
)



# Generate FindEngine.cmake
configure_file(
 "${PROJECT_SOURCE_DIR}/generate/cmake/FindEngine.cmake.in"
 "${PROJECT_SOURCE_DIR}/generate/cmake/FindEngine.cmake"
 @ONLY
)


# Also install some usefull cmakefiles
set(DEPENDENCES ${PROJECT_SOURCE_DIR}/generate/cmake/FindEngine.cmake)

set(OTHER_INC ${PROJECT_SOURCE_DIR}/include/engine.hpp ${PROJECT_SOURCE_DIR}/include/defines.hpp )

# The install configuaration
install( FILES ${DEPENDENCES} DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/engine)
install( FILES ${OTHER_INC}   DESTINATION ${CMAKE_INSTALL_PREFIX}/include/engine)



# Print some stuff
if( ENGINE_VERBOSE )
   message( STATUS "" )
   message( STATUS "" )
   message( STATUS "" )
   message( STATUS "    LIBRARIES" )
   message( STATUS "    =========" )
   message( STATUS "" )
   message( STATUS "GLEW libraries:     ${GLEW_LIBRARIES}" )
   message( STATUS "OpenGL libraries:   ${OPENGL_LIBRARIES}" )
   message( STATUS "X11 libraries:      ${X11_LIBRARIES}" )
   message( STATUS "RandR (X11):        ${X11_Xrandr_LIB}" )
   message( STATUS "Threads:            ${CMAKE_THREAD_LIBS_INIT}" )
   message( STATUS "Boost:              ${Boost_LIBRARIES}" )
   message( STATUS "Boost include:      ${Boost_INCLUDE_DIRS}" )
   message( STATUS "" )
   message( STATUS "" )
   message( STATUS "      ETC" )
   message( STATUS "      ===" )
   message( STATUS "" )
   message( STATUS "GIT commit:         ${CM_VERSION_GIT}" )
   message( STATUS "" )
   message( STATUS "Compiler (ID):      ${CMAKE_CXX_COMPILER_ID}" )
   message( STATUS "Compiler (Exec):    ${CMAKE_CXX_COMPILER}" )
   message( STATUS "Compiler (Version): ${ENGINE_COMPILER_VERSION}" )
   message( STATUS "Options:" )
   message( STATUS "  - DEBUG:          ${CMAKE_CXX_FLAGS_DEBUG}" )
   message( STATUS "  - RELEASE:        ${CMAKE_CXX_FLAGS_RELEASE}" )
   message( STATUS "" )
   message( STATUS "" )
endif( ENGINE_VERBOSE )
